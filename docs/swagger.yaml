basePath: /api
definitions:
  controllers.User:
    properties:
      created_by:
        type: string
      created_on:
        type: integer
      deleted_at:
        type: integer
      id:
        type: integer
      modified_by:
        type: string
      modified_on:
        type: integer
      name:
        type: string
    type: object
  controllers.UserSwagger:
    properties:
      lists:
        items:
          $ref: '#/definitions/controllers.User'
        type: array
      total:
        type: integer
    type: object
  utils.SKELETON:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /api/login:
    get:
      description: 获取用户列表
      produces:
      - application/json
      responses:
        "0":
          description: 查询成功
          schema:
            $ref: '#/definitions/controllers.UserSwagger'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.SKELETON'
        "20001":
          description: Token鉴权失败
          schema:
            $ref: '#/definitions/utils.SKELETON'
        "20002":
          description: Token已超时
          schema:
            $ref: '#/definitions/utils.SKELETON'
        "20004":
          description: Token错误
          schema:
            $ref: '#/definitions/utils.SKELETON'
        "20005":
          description: Token参数不能为空
          schema:
            $ref: '#/definitions/utils.SKELETON'
      summary: 用户登录
      tags:
      - 用户信息
  /api/register:
    get:
      description: |-
        使用用户名密码注册成为新用户
        用户名不能为空，密码不能为空
      parameters:
      - description: 用户名
        in: query
        name: username
        type: string
      - description: 密码
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: 查询成功
          schema:
            $ref: '#/definitions/controllers.UserSwagger'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.SKELETON'
      summary: 用户注册
      tags:
      - 用户信息
  /api/sms:
    post:
      description: 用户注册、找回密码时需要用到
      parameters:
      - description: 设备ID
        in: header
        name: deviceid
        type: string
      - description: 手机号
        in: formData
        name: mobile
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: 发送成功
          schema:
            $ref: '#/definitions/controllers.UserSwagger'
        "1":
          description: 发送达到上限
          schema:
            type: string
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.SKELETON'
      summary: 发送手机验证码
      tags:
      - 手机短信
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
